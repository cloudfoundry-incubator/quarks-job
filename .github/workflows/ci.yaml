name: quarks-job-ci

on: [push]

jobs:   
  unit-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Go 1.13.4
      uses: actions/setup-go@v2
      with:
        go-version: 1.13.4
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Install dependencies
      run: |
        go install github.com/onsi/ginkgo/ginkgo
        go get github.com/mattn/goveralls
        go get github.com/modocache/gover
        go get -u golang.org/x/lint/golint
        curl -LO https://github.com/dominikh/go-tools/releases/download/2020.1.3/staticcheck_linux_amd64.tar.gz
        sudo tar xfz staticcheck_linux_amd64.tar.gz --strip-component 1 -C $GOPATH/bin staticcheck/staticcheck
    - name: Run lint
      run: make lint
    - name: Run unit tests
      run: |
        make test-unit
      env:
        COVERAGE: true
        GOPROXY: "https://proxy.golang.org"
    - uses: actions/upload-artifact@master
      with:
        name: coverage-files
        path: ./code-coverage

  cluster-tests:
    needs: [unit-tests]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        kubernetes_version: [v1.14.10,v1.15.7,v1.16.4,v1.17.0,v1.18.0]

    steps:
    - name: Set up Go 1.13.4
      uses: actions/setup-go@v2
      with:
        go-version: 1.13.4
    - uses: actions/checkout@v2 
    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - uses: actions/download-artifact@master
      with:
        name: coverage-files
        path: ./code-coverage
    - name: Install Go dependencies
      run: |
        go install github.com/onsi/ginkgo/ginkgo
        go get github.com/mattn/goveralls
        go get github.com/modocache/gover
    - name: Prepare GITHUB_ACTION_BRANCH env
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: prepare_branch_env
    - name: Create k8s Kind Cluster
      uses: engineerd/setup-kind@v0.3.0
      with:
       version: v0.8.0
       image: kindest/node:${{matrix.kubernetes_version}}
    - name: Run cluster tests
      run: |
        USE_KIND=true make test-cluster
        make coverage
      env:
        GITHUB_ACTION_BRANCH: ${{ steps.prepare_branch_env.outputs.branch }}
        COVERAGE: true
        GOPROXY: "https://proxy.golang.org"
    - uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: ./code-coverage/gover.coverprofile

  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: azure/setup-helm@v1
      with:
        version: v3.0.0
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Prepare GITHUB_ACTION_BRANCH env
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: prepare_branch_env
    - name: Publish Helm Chart
      run: |
        git fetch --unshallow
        bash ./bin/deploy
      env:
        GITHUB_ACTION_BRANCH: ${{ steps.prepare_branch_env.outputs.branch }}
        GH_PASSWORD: ${{ secrets.GH_PASSWORD }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: cfcontainerization
        GOPROXY: "https://proxy.golang.org"
