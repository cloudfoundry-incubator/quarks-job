language: go

go:
- '1.13.4'

cache:
  directories:
    - $GOPATH/pkg/mod

services:
- docker

env:
  global:
    - GOPROXY="https://proxy.golang.org"
    - COVERAGE=true
    # for Helm
    - DESIRED_VERSION="v3.1.0"
  jobs:
    - KUBE=1.14.10
    - KUBE=1.15.7
    - KUBE=1.16.4
    - KUBE=1.17.0
    - KUBE=1.18.0

stages:
  - lint
  - unit
  - test

install:
  # Download go dev dependencies
  - export PATH=$PATH:$GOPATH/bin
  - go install github.com/onsi/ginkgo/ginkgo
  - go get github.com/mattn/goveralls
  - go get github.com/modocache/gover

# Avoid too many builds.
# Otherwise opening a PR from a local branch would trigger two builds.
if: type = push OR (type = pull_request AND head_repo != repo)

before_script:
  # Download and install kubectl
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  # Download and install KinD
  - curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/v0.7.0/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/
  # Create a new Kubernetes cluster using KinD
  - kind create cluster --image kindest/node:v$KUBE --name kind$KUBE --wait 240s
  - kubectl version
  # Download and install helm
  - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
  - chmod 700 get_helm.sh
  - sudo ./get_helm.sh

# The matrix build for all Kubernetes versions
script:
  - USE_KIND="true" make test-cluster
  - make coverage

# These steps are run outside the matrix
jobs:
  include:
    - stage: unit
      services: []
      before_script:
        - curl -LO https://github.com/dominikh/go-tools/releases/download/2020.1.3/staticcheck_linux_amd64.tar.gz
        - tar xfz staticcheck_linux_amd64.tar.gz --strip-component 1 -C $GOPATH/bin staticcheck/staticcheck
        - go get -u golang.org/x/lint/golint
      script: make lint
      name: lint
    - script: make test-unit coverage
      # do not inherit
      services: []
      before_script: []
      name: unit
      env: KUBE=none

    - stage: Publishing
      # security: only push
      if: type = push
      # do not inherit
      install: []
      before_script:
        # Download and install helm
        - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
        - chmod 700 get_helm.sh
        - sudo ./get_helm.sh
      script: echo "Publishing"
      before_deploy:
        - git fetch --unshallow
      deploy:
        - provider: script
          on:
            all_branches: true
            repo: cloudfoundry-incubator/quarks-job
          script: bin/deploy
