apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "quarks-job.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: quarks-job
  template:
    metadata:
      labels:
        name: quarks-job
    spec:
      serviceAccountName: {{ template "quarks-job.serviceAccountName" . }}
      containers:
        - name: quarks-job
          image: "{{ .Values.image.org }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
          - containerPort: 60000
            name: metrics
          command:
          - quarks-job
          imagePullPolicy: {{ .Values.global.image.pullPolicy | quote }}
          env:
            - name: APPLY_CRD
              value: "{{ .Values.applyCRD }}"
            {{- if .Values.kubeconfig }}
            - name: KUBECONFIG
              value: "{{ .Values.kubeConfig }}"
            {{- end}}
            - name: LOG_LEVEL
              value: "{{ .Values.logLevel }}"
            - name: MAX_WORKERS
              value: "{{ .Values.maxWorkers }}"
            {{- if .Values.global.operator.watchNamespace }}
            - name: WATCH_NAMESPACE
              value: "{{ .Values.global.operator.watchNamespace }}"
            {{- end}}
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CTX_TIMEOUT
              value: "{{ .Values.global.contextTimeout }}"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SERVICE_ACCOUNT
              value: quarks-job-persist-output
            - name: OPERATOR_NAME
              value: "quarks-job"
            - name: DOCKER_IMAGE_ORG
              value: "{{ .Values.image.org }}"
            - name: DOCKER_IMAGE_REPOSITORY
              value: "{{ .Values.image.repository }}"
            - name: DOCKER_IMAGE_TAG
              value: "{{ .Values.image.tag }}"
            - name: DOCKER_IMAGE_PULL_POLICY
              value: "{{ .Values.global.image.pullPolicy }}"
