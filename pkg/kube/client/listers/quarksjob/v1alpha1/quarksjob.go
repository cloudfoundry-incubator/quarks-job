/*

Don't alter this file, it was generated.

*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "code.cloudfoundry.org/quarks-job/pkg/kube/apis/quarksjob/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// QuarksJobLister helps list QuarksJobs.
type QuarksJobLister interface {
	// List lists all QuarksJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.QuarksJob, err error)
	// QuarksJobs returns an object that can list and get QuarksJobs.
	QuarksJobs(namespace string) QuarksJobNamespaceLister
	QuarksJobListerExpansion
}

// quarksJobLister implements the QuarksJobLister interface.
type quarksJobLister struct {
	indexer cache.Indexer
}

// NewQuarksJobLister returns a new QuarksJobLister.
func NewQuarksJobLister(indexer cache.Indexer) QuarksJobLister {
	return &quarksJobLister{indexer: indexer}
}

// List lists all QuarksJobs in the indexer.
func (s *quarksJobLister) List(selector labels.Selector) (ret []*v1alpha1.QuarksJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.QuarksJob))
	})
	return ret, err
}

// QuarksJobs returns an object that can list and get QuarksJobs.
func (s *quarksJobLister) QuarksJobs(namespace string) QuarksJobNamespaceLister {
	return quarksJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// QuarksJobNamespaceLister helps list and get QuarksJobs.
type QuarksJobNamespaceLister interface {
	// List lists all QuarksJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.QuarksJob, err error)
	// Get retrieves the QuarksJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.QuarksJob, error)
	QuarksJobNamespaceListerExpansion
}

// quarksJobNamespaceLister implements the QuarksJobNamespaceLister
// interface.
type quarksJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all QuarksJobs in the indexer for a given namespace.
func (s quarksJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.QuarksJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.QuarksJob))
	})
	return ret, err
}

// Get retrieves the QuarksJob from the indexer for a given namespace and name.
func (s quarksJobNamespaceLister) Get(name string) (*v1alpha1.QuarksJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("quarksjob"), name)
	}
	return obj.(*v1alpha1.QuarksJob), nil
}
